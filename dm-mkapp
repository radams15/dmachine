#!/usr/bin/perl

use warnings;
use strict;

use File::Path;
use Getopt::Long;

my $BASE = '/Users/rhys/scripts/dmachine/';

require "$BASE/private/share.pl";

our $CM;
our $user;
our $display;

my $exe = $0;

sub usage {
    return "USAGE: $exe -n CONTAINER -c COMMAND -o APP_NAME";
}

my $container;
my $command;
my $name;

GetOptions (
            'name|n=s' => \$container,
            'command|c=s' => \$command,
            'output|o=s' => \$name
            ) or die 'Error in CLI args\n';

die usage() unless defined($container) and defined($command) and defined($name);

sub read_template {
	my ($template, $name) = @_;
	open my $fh, '<', $template or die "Can't open file $!";
	
	read $fh, my $fileContent, -s $fh;

	$fileContent =~ s/\%name\%/$name/g;

	close $fh;

	return $fileContent;
}

sub write_str {
	my ($file, $content) = @_;

	open my $fh, '>', $file or die "Can't open file $!";

	print $fh $content;

	close $fh;
}

sub make {
	my ($container, $path, $name, $command) = @_;

	File::Path::make_path("$path/$name.app/Contents/MacOS");
	File::Path::make_path("$path/$name.app/Contents/Resources");

	write_str("$path/$name.app/Contents/Info.plist", read_template("$BASE/private/Info.plist.template", $name));
	
	my $launcherScript = "#!/bin/bash\n$BASE/dm-enter -n $container -c '$command' &";

	write_str("$path/$name.app/Contents/MacOS/run", $launcherScript);
	`chmod +x '$path/$name.app/Contents/MacOS/run'`;
}

make $container, '.', $name, $command;
